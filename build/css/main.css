/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}details,main{display:block}hr{box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none;max-width:100%}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}@font-face{font-family:SFUIText;src:url(../fonts/SFUIText-Regular.eot);src:local("SFUIText Regular"),local("SFUIText-Regular"),url(../fonts/SFUIText-Regular.eot?#iefix) format("embedded-opentype"),url(../fonts/SFUIText-Regular.woff2) format("woff2"),url(../fonts/SFUIText-Regular.woff) format("woff"),url(../fonts/SFUIText-Regular.ttf) format("truetype");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:SFUIText;src:url(../fonts/SFUIText-Medium.eot);src:local("SFUIText Medium"),local("SFUIText-Medium"),url(../fonts/SFUIText-Medium.eot?#iefix) format("embedded-opentype"),url(../fonts/SFUIText-Medium.woff2) format("woff2"),url(../fonts/SFUIText-Medium.woff) format("woff"),url(../fonts/SFUIText-Medium.ttf) format("truetype");font-weight:500;font-style:normal;font-display:swap}@font-face{font-family:SFUIText;src:url(../fonts/SFUIText-Semibold.eot);src:local("SFUIText Semibold"),local("SFUIText-Semibold"),url(../fonts/SFUIText-Semibold.eot?#iefix) format("embedded-opentype"),url(../fonts/SFUIText-Semibold.woff2) format("woff2"),url(../fonts/SFUIText-Semibold.woff) format("woff"),url(../fonts/SFUIText-Semibold.ttf) format("truetype");font-weight:600;font-style:normal;font-display:swap}@font-face{font-family:SFUIText;src:url(../fonts/SFUIText-Heavy.eot);src:local("SFUIText Heavy"),local("SFUIText-Heavy"),url(../fonts/SFUIText-Heavy.eot?#iefix) format("embedded-opentype"),url(../fonts/SFUIText-Heavy.woff2) format("woff2"),url(../fonts/SFUIText-Heavy.woff) format("woff"),url(../fonts/SFUIText-Heavy.ttf) format("truetype");font-weight:800;font-style:normal;font-display:swap}body,html{font-family:SFUIText,Arial,sans-serif;margin:0;padding:0}h1,h2,h3,h4,h5,h6{font-family:SFUIText,Arial,sans-serif;font-weight:600;color:#000}h1{margin:.67em 0;font-size:26px;line-height:31px}h2{font-size:24px;line-height:32px;margin-bottom:30px}h3{font-size:20px;line-height:30px;font-weight:500}p{font-size:14px;line-height:22px;margin:8px 0}b{font-weight:600}a{background-color:transparent;font-size:inherit;font-family:inherit;font-weight:inherit;line-height:inherit;color:inherit}a:focus,a:hover{text-decoration:underline}.container{margin-right:20px;margin-left:20px}.title-line{position:relative;margin-bottom:63px}.title-line:after{content:"";position:absolute;bottom:-20px;left:0;width:105px;height:3px;background-color:#207ff1}.visually-hidden:not(:focus):not(:active){position:absolute;width:1px;height:1px;margin:-1px;bottom:0;padding:0;white-space:nowrap;-webkit-clip-path:inset(100%);clip-path:inset(100%);clip:rect(0 0 0 0);overflow:hidden}@media screen and (min-width:850px){p{font-size:18px;line-height:29px}}@media (min-width:850px){.container{max-width:1420px;margin:0 auto;padding:0 15px;box-sizing:border-box}}.btn{display:inline-block;font-size:16px;line-height:19px;text-decoration:none;color:#fff;background-color:#207ff1;border:none;border-radius:15px;padding:18px 28px;transition:color .2s,background-color .3s;box-sizing:border-box;cursor:pointer}.btn:focus,.btn:hover{text-decoration:none;background-color:#185fb5}.btn--outline{color:#207ff1;background-color:transparent;border:1px solid #207ff1}.btn--outline:focus,.btn--outline:hover{color:#fff}.btn--small{padding:6px 22px}.btn--light{color:#207ff1;background-color:#f1f6fc}.btn--light:focus,.btn--light:hover{color:#fff;background-color:#207ff1}label{font-size:15px;line-height:18px;color:#767676}input::-webkit-input-placeholder{color:#ababab}input:-ms-input-placeholder{color:#ababab}input::placeholder{color:#ababab}input[type=tel],input[type=text],textarea{font-size:18px;line-height:22px;padding:16px 21px;border:1px solid #c4c4c4;border-radius:15px;box-sizing:border-box}input[type=submit]{padding-right:28px;padding-left:28px}.site-header{background-color:#f1f6fc;border-radius:0 0 30px 30px;padding-top:22px;margin-bottom:22px}.site-header__col--logo:after{content:"";clear:both;display:table}.site-header__logo{float:left;display:flex;flex-direction:row;align-items:center;justify-content:space-between;flex-wrap:nowrap;font-weight:800;font-size:15.4875px;line-height:18px;text-decoration:none;text-transform:uppercase}.site-header__logo:focus,.site-header__logo:hover{text-decoration:none}.site-header__logo svg{width:40px;height:36px}.site-header__logo span{margin-left:12px}.site-header__burger-menu{float:right;position:relative;width:36px;height:36px;background-color:transparent;border:none;border-radius:30px;padding:0;cursor:pointer}.site-header__burger-menu:after,.site-header__burger-menu:before{content:"";position:absolute;right:0;height:2px;background-color:#000;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.site-header__burger-menu:before{top:calc(50% - 4px);width:100%}.site-header__burger-menu:after{top:calc(50% + 4px);width:55%;transition:width .2s ease-in-out}.site-header__burger-menu:focus:after,.site-header__burger-menu:hover:after{width:85%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
